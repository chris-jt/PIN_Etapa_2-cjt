AWSTemplateFormatVersion: '2010-09-09'
Description: 'Sandbox infrastructure with VPC, EC2 instances, S3, and DynamoDB'

Resources:
  SandboxVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: Sandbox VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: '!Ref SandboxVPC'
      AvailabilityZone: 
        'Fn::Select': 
          - 0
          - 'Fn::GetAZs': 
              'Ref': 'AWS::Region'
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Sandbox Public Subnet 1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: '!Ref SandboxVPC'
      AvailabilityZone: 
        'Fn::Select': 
          - 0
          - 'Fn::GetAZs': 
              'Ref': 'AWS::Region'
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Sandbox Public Subnet 2

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Sandbox Internet Gateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: '!Ref SandboxVPC'
      InternetGatewayId: '!Ref InternetGateway'

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: '!Ref SandboxVPC'
      Tags:
        - Key: Name
          Value: Sandbox Public Route Table

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: '!Ref PublicRouteTable'
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: '!Ref InternetGateway'

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: '!Ref PublicSubnet1'
      RouteTableId: '!Ref PublicRouteTable'

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: '!Ref PublicSubnet2'
      RouteTableId: '!Ref PublicRouteTable'

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "Sandbox EC2 Security Group"
      GroupDescription: "Security group for Sandbox EC2 instances"
      VpcId: '!Ref SandboxVPC'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  EC2Instance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0aa7d40eeae50c9a9  # Amazon Linux 2 AMI (ajusta según tu región)
      SubnetId: '!Ref PublicSubnet1'
      SecurityGroupIds: 
        - '!Ref EC2SecurityGroup'
      Tags:
        - Key: Name
          Value: Sandbox EC2 Instance 1

  EC2Instance2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0aa7d40eeae50c9a9  # Amazon Linux 2 AMI (ajusta según tu región)
      SubnetId: '!Ref PublicSubnet2'
      SecurityGroupIds: 
        - '!Ref EC2SecurityGroup'
      Tags:
        - Key: Name
          Value: Sandbox EC2 Instance 2

  SandboxS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: '!Sub sandbox-bucket-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled

  SandboxDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SandboxTable
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: '!Ref SandboxVPC'
    Export:
      Name: SandboxVPC

  PublicSubnets:
    Description: A list of the public subnets
    Value: '!Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]'
    Export:
      Name: SandboxPublicSubnets

  EC2Instance1PublicDNS:
    Description: Public DNS of EC2 Instance 1
    Value: '!GetAtt EC2Instance1.PublicDnsName'

  EC2Instance2PublicDNS:
    Description: Public DNS of EC2 Instance 2
    Value: '!GetAtt EC2Instance2.PublicDnsName'

  S3BucketName:
    Description: Name of the created S3 bucket
    Value: '!Ref SandboxS3Bucket'

  DynamoDBTableName:
    Description: Name of the created DynamoDB table
    Value: '!Ref SandboxDynamoDBTable'